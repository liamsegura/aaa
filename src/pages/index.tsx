import Head from "next/head";
import { useUser } from "@clerk/nextjs";
import Header from "../compenents/Header";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "../compenents/ui/card";
import { Suspense } from "react";
import { useState, useEffect } from "react";

interface Drink {
  idDrink: string;
  strDrink: string;
  strDrinkThumb: string;
}

interface DrinkData {
  drinks: Drink[] | null;
}

const Home = () => {
  const user = useUser();
  const [loading, setLoading] = useState(true);
  const [drinks, setDrinks] = useState<Drink[]>([]);

  const getDrinks = async () => {
    try {
      const res = await fetch(
        "https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=Cocktail"
      );
      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
      const data: DrinkData = await res.json();
      console.log(data);
      if (data && data.drinks) {
        setDrinks(data.drinks);
      }
      setLoading(false);
    } catch (error) {
      console.error("Error fetching drinks:", error);
    }
  };

  useEffect(() => {
    const fetchData = async () => {
      try {
        await getDrinks();
      } catch (error) {
        console.error("Error fetching drinks:", error);
      }
    };
    void fetchData();
  }, []);

  return (
    <>
      <Head>
        <title>aaa</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main className="flex min-h-screen items-center justify-center">
        <div className="max-w-sm p-10">
          <ul>
            {user.isSignedIn ? (
              loading ? (
                <li>Loading...</li>
              ) : (
                <>
                  {drinks.length > 0 ? (
                    drinks.map((drink: Drink) => (
                      <li key={drink.idDrink}>
                        <Card>
                          <CardHeader>
                            <CardTitle>{drink.strDrink}</CardTitle>
                            <CardDescription></CardDescription>
                          </CardHeader>
                          <CardContent>
                            <Suspense fallback={<div>Loading image...</div>}>
                              <img
                                className="rounded-lg"
                                src={drink.strDrinkThumb}
                                alt=""
                              />
                            </Suspense>
                          </CardContent>
                        </Card>
                      </li>
                    ))
                  ) : (
                    <li>No drinks available</li>
                  )}
                </>
              )
            ) : null}
          </ul>
        </div>
      </main>
    </>
  );
};

export default Home;
